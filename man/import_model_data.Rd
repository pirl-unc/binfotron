% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/import_model_data_et_al.R
\name{import_model_data}
\alias{import_model_data}
\title{Perform common steps needed for importing model data}
\usage{
import_model_data(
  import_paths,
  df_filters = c(),
  ranks_feature_path = NULL,
  ranks_clm = NULL,
  ranks_count = NULL,
  set_clm = "Set",
  sample_key = binfotron::get_default_sample_key(),
  indep_vars = NULL,
  clinical_vars = NULL,
  dep_vars = NULL
)
}
\arguments{
\item{import_paths}{Vector of paths to import and merge}

\item{df_filters}{Character vector to be parsed in a loop using \code{dplyr::filter}}

\item{ranks_feature_path}{Path to data matrix with feature names in one column and ranks in another.}

\item{ranks_clm}{String to indicate which column contains the column ranks}

\item{ranks_count}{Integer to indicate how many features to take from the column ranks}

\item{set_clm}{Column name to indicate which samples are in "Validation" vs "Discovery" sets}

\item{sample_key}{Column name to use as the sample key to merge all matrices}

\item{indep_vars}{Character string of column names for the independent variables}

\item{clinical_vars}{Character string of column names for the clinical variables. These will be added on in addition to the indep_vars.}

\item{dep_vars}{Character string of column names for the dependent variables}

\item{merge_file_patterns}{Character vector of file patterns to look for and merge to make the final output matrices}
}
\description{
All models will start with a matrix of ranked features, and the feature
values of the features. This fxn orders the features, pulls out the top x and
outputs disc and validation dataset matrices with the correct indep and dep
variables. This function has the option to specify certain features or to pull
the top x feature from a columns ranks file.
}
\details{
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
import_model_data
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
}
